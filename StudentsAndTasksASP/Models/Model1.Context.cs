//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Duble2.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities1 : DbContext
    {
        public Entities1()
            : base("name=Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Curriculum> Curriculum { get; set; }
        public virtual DbSet<Group_2> Group_2 { get; set; }
        public virtual DbSet<Student> Student { get; set; }
        public virtual DbSet<Student_has_Tasks> Student_has_Tasks { get; set; }
        public virtual DbSet<Subject> Subject { get; set; }
        public virtual DbSet<Tasks> Tasks { get; set; }
    
        public virtual ObjectResult<ComplexTableGroupSelectProc_Result> ComplexTableGroupSelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComplexTableGroupSelectProc_Result>("ComplexTableGroupSelectProc");
        }
    
        public virtual int CurriculumDeleteProc(string groupNum, string subjectName)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CurriculumDeleteProc", groupNumParameter, subjectNameParameter);
        }
    
        public virtual int CurriculumInsertProc1(string groupNum, string subjectName)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CurriculumInsertProc1", groupNumParameter, subjectNameParameter);
        }
    
        public virtual ObjectResult<CurriculumSelectProc_Result> CurriculumSelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CurriculumSelectProc_Result>("CurriculumSelectProc");
        }
    
        public virtual int CurriculumUpdateProc(string groupNum, string subjectName, string newSubjectName)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var newSubjectNameParameter = newSubjectName != null ?
                new ObjectParameter("NewSubjectName", newSubjectName) :
                new ObjectParameter("NewSubjectName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CurriculumUpdateProc", groupNumParameter, subjectNameParameter, newSubjectNameParameter);
        }
    
        public virtual int deleteALLFrom_Group_2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteALLFrom_Group_2");
        }
    
        public virtual int FillCurriculum()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FillCurriculum");
        }
    
        public virtual ObjectResult<FillGroup_Result> FillGroup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FillGroup_Result>("FillGroup");
        }
    
        public virtual ObjectResult<FillStudent_Result> FillStudent()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FillStudent_Result>("FillStudent");
        }
    
        public virtual int FillStudentHasTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FillStudentHasTasks");
        }
    
        public virtual ObjectResult<string> FillSubject()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("FillSubject");
        }
    
        public virtual int FillTasks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FillTasks");
        }
    
        public virtual int Group_2DeleteProc(string groupNum)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Group_2DeleteProc", groupNumParameter);
        }
    
        public virtual int Group_2InsertProc(string groupNum, string majorName, Nullable<System.DateTime> year)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            var majorNameParameter = majorName != null ?
                new ObjectParameter("MajorName", majorName) :
                new ObjectParameter("MajorName", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Group_2InsertProc", groupNumParameter, majorNameParameter, yearParameter);
        }
    
        public virtual ObjectResult<Group_2SelectProc_Result> Group_2SelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Group_2SelectProc_Result>("Group_2SelectProc");
        }
    
        public virtual int GroupUpdateProc(string groupNum, string newMajorName, Nullable<System.DateTime> year)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            var newMajorNameParameter = newMajorName != null ?
                new ObjectParameter("NewMajorName", newMajorName) :
                new ObjectParameter("NewMajorName", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GroupUpdateProc", groupNumParameter, newMajorNameParameter, yearParameter);
        }
    
        public virtual int Student_TaskDeleteProc(Nullable<int> student_NumberOfCreditBook, Nullable<int> tasks_idTaskNumber)
        {
            var student_NumberOfCreditBookParameter = student_NumberOfCreditBook.HasValue ?
                new ObjectParameter("Student_NumberOfCreditBook", student_NumberOfCreditBook) :
                new ObjectParameter("Student_NumberOfCreditBook", typeof(int));
    
            var tasks_idTaskNumberParameter = tasks_idTaskNumber.HasValue ?
                new ObjectParameter("Tasks_idTaskNumber", tasks_idTaskNumber) :
                new ObjectParameter("Tasks_idTaskNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Student_TaskDeleteProc", student_NumberOfCreditBookParameter, tasks_idTaskNumberParameter);
        }
    
        public virtual int Student_TaskInsertProc(Nullable<int> student_NumberOfCreditBook, Nullable<int> tasks_idTaskNumber, Nullable<System.DateTime> taskPassDate, Nullable<System.DateTime> taskGetDate)
        {
            var student_NumberOfCreditBookParameter = student_NumberOfCreditBook.HasValue ?
                new ObjectParameter("Student_NumberOfCreditBook", student_NumberOfCreditBook) :
                new ObjectParameter("Student_NumberOfCreditBook", typeof(int));
    
            var tasks_idTaskNumberParameter = tasks_idTaskNumber.HasValue ?
                new ObjectParameter("Tasks_idTaskNumber", tasks_idTaskNumber) :
                new ObjectParameter("Tasks_idTaskNumber", typeof(int));
    
            var taskPassDateParameter = taskPassDate.HasValue ?
                new ObjectParameter("TaskPassDate", taskPassDate) :
                new ObjectParameter("TaskPassDate", typeof(System.DateTime));
    
            var taskGetDateParameter = taskGetDate.HasValue ?
                new ObjectParameter("TaskGetDate", taskGetDate) :
                new ObjectParameter("TaskGetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Student_TaskInsertProc", student_NumberOfCreditBookParameter, tasks_idTaskNumberParameter, taskPassDateParameter, taskGetDateParameter);
        }
    
        public virtual ObjectResult<Student_TaskSelectProc_Result> Student_TaskSelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Student_TaskSelectProc_Result>("Student_TaskSelectProc");
        }
    
        public virtual int Student_TaskUpdateProc(Nullable<int> student_NumberOfCreditBook, Nullable<int> tasks_idTaskNumber, Nullable<System.DateTime> taskPassDate, Nullable<System.DateTime> taskGetDate)
        {
            var student_NumberOfCreditBookParameter = student_NumberOfCreditBook.HasValue ?
                new ObjectParameter("Student_NumberOfCreditBook", student_NumberOfCreditBook) :
                new ObjectParameter("Student_NumberOfCreditBook", typeof(int));
    
            var tasks_idTaskNumberParameter = tasks_idTaskNumber.HasValue ?
                new ObjectParameter("Tasks_idTaskNumber", tasks_idTaskNumber) :
                new ObjectParameter("Tasks_idTaskNumber", typeof(int));
    
            var taskPassDateParameter = taskPassDate.HasValue ?
                new ObjectParameter("TaskPassDate", taskPassDate) :
                new ObjectParameter("TaskPassDate", typeof(System.DateTime));
    
            var taskGetDateParameter = taskGetDate.HasValue ?
                new ObjectParameter("TaskGetDate", taskGetDate) :
                new ObjectParameter("TaskGetDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Student_TaskUpdateProc", student_NumberOfCreditBookParameter, tasks_idTaskNumberParameter, taskPassDateParameter, taskGetDateParameter);
        }
    
        public virtual int StudentDeleteProc(Nullable<int> numberOfCreditBook)
        {
            var numberOfCreditBookParameter = numberOfCreditBook.HasValue ?
                new ObjectParameter("NumberOfCreditBook", numberOfCreditBook) :
                new ObjectParameter("NumberOfCreditBook", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentDeleteProc", numberOfCreditBookParameter);
        }
    
        public virtual int StudentInsertProc(Nullable<int> numberOfCreditBook, string newGroupNum, string newFIO)
        {
            var numberOfCreditBookParameter = numberOfCreditBook.HasValue ?
                new ObjectParameter("NumberOfCreditBook", numberOfCreditBook) :
                new ObjectParameter("NumberOfCreditBook", typeof(int));
    
            var newGroupNumParameter = newGroupNum != null ?
                new ObjectParameter("NewGroupNum", newGroupNum) :
                new ObjectParameter("NewGroupNum", typeof(string));
    
            var newFIOParameter = newFIO != null ?
                new ObjectParameter("NewFIO", newFIO) :
                new ObjectParameter("NewFIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentInsertProc", numberOfCreditBookParameter, newGroupNumParameter, newFIOParameter);
        }
    
        public virtual ObjectResult<StudentSelectProc_Result> StudentSelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentSelectProc_Result>("StudentSelectProc");
        }
    
        public virtual int StudentUpdateProc(Nullable<int> numberOfCreditBook, string newGroupNum, string newFIO)
        {
            var numberOfCreditBookParameter = numberOfCreditBook.HasValue ?
                new ObjectParameter("NumberOfCreditBook", numberOfCreditBook) :
                new ObjectParameter("NumberOfCreditBook", typeof(int));
    
            var newGroupNumParameter = newGroupNum != null ?
                new ObjectParameter("NewGroupNum", newGroupNum) :
                new ObjectParameter("NewGroupNum", typeof(string));
    
            var newFIOParameter = newFIO != null ?
                new ObjectParameter("NewFIO", newFIO) :
                new ObjectParameter("NewFIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentUpdateProc", numberOfCreditBookParameter, newGroupNumParameter, newFIOParameter);
        }
    
        public virtual int SubjectDeleteProc(string subjectName, string teachersFIO, string department)
        {
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var teachersFIOParameter = teachersFIO != null ?
                new ObjectParameter("TeachersFIO", teachersFIO) :
                new ObjectParameter("TeachersFIO", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubjectDeleteProc", subjectNameParameter, teachersFIOParameter, departmentParameter);
        }
    
        public virtual int SubjectInsertProc(string subjectName, string teachersFIO, string department)
        {
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var teachersFIOParameter = teachersFIO != null ?
                new ObjectParameter("TeachersFIO", teachersFIO) :
                new ObjectParameter("TeachersFIO", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubjectInsertProc", subjectNameParameter, teachersFIOParameter, departmentParameter);
        }
    
        public virtual ObjectResult<SubjectSelectProc_Result> SubjectSelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubjectSelectProc_Result>("SubjectSelectProc");
        }
    
        public virtual int SubjectUpdateProc(string subjectName, string teachersFIO, string department)
        {
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var teachersFIOParameter = teachersFIO != null ?
                new ObjectParameter("TeachersFIO", teachersFIO) :
                new ObjectParameter("TeachersFIO", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SubjectUpdateProc", subjectNameParameter, teachersFIOParameter, departmentParameter);
        }
    
        public virtual int TaskOneProcFindNumber(Nullable<int> numberOfCreditBook, string subject, Nullable<System.DateTime> dateNow)
        {
            var numberOfCreditBookParameter = numberOfCreditBook.HasValue ?
                new ObjectParameter("NumberOfCreditBook", numberOfCreditBook) :
                new ObjectParameter("NumberOfCreditBook", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var dateNowParameter = dateNow.HasValue ?
                new ObjectParameter("DateNow", dateNow) :
                new ObjectParameter("DateNow", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TaskOneProcFindNumber", numberOfCreditBookParameter, subjectParameter, dateNowParameter);
        }
    
        public virtual int TasksDELETEProc(Nullable<int> idTaskNumber, Nullable<short> taskNumber, string subject_SubjectName, string summary)
        {
            var idTaskNumberParameter = idTaskNumber.HasValue ?
                new ObjectParameter("idTaskNumber", idTaskNumber) :
                new ObjectParameter("idTaskNumber", typeof(int));
    
            var taskNumberParameter = taskNumber.HasValue ?
                new ObjectParameter("TaskNumber", taskNumber) :
                new ObjectParameter("TaskNumber", typeof(short));
    
            var subject_SubjectNameParameter = subject_SubjectName != null ?
                new ObjectParameter("Subject_SubjectName", subject_SubjectName) :
                new ObjectParameter("Subject_SubjectName", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TasksDELETEProc", idTaskNumberParameter, taskNumberParameter, subject_SubjectNameParameter, summaryParameter);
        }
    
        public virtual int TasksInsertProc(Nullable<int> idTaskNumber, Nullable<short> taskNumber, string subject_SubjectName, string summary)
        {
            var idTaskNumberParameter = idTaskNumber.HasValue ?
                new ObjectParameter("idTaskNumber", idTaskNumber) :
                new ObjectParameter("idTaskNumber", typeof(int));
    
            var taskNumberParameter = taskNumber.HasValue ?
                new ObjectParameter("TaskNumber", taskNumber) :
                new ObjectParameter("TaskNumber", typeof(short));
    
            var subject_SubjectNameParameter = subject_SubjectName != null ?
                new ObjectParameter("Subject_SubjectName", subject_SubjectName) :
                new ObjectParameter("Subject_SubjectName", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TasksInsertProc", idTaskNumberParameter, taskNumberParameter, subject_SubjectNameParameter, summaryParameter);
        }
    
        public virtual ObjectResult<TasksSelectProc_Result> TasksSelectProc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TasksSelectProc_Result>("TasksSelectProc");
        }
    
        public virtual int TasksUPDATEProc(Nullable<int> idTaskNumber, Nullable<short> taskNumber, string subject_SubjectName, string summary)
        {
            var idTaskNumberParameter = idTaskNumber.HasValue ?
                new ObjectParameter("idTaskNumber", idTaskNumber) :
                new ObjectParameter("idTaskNumber", typeof(int));
    
            var taskNumberParameter = taskNumber.HasValue ?
                new ObjectParameter("TaskNumber", taskNumber) :
                new ObjectParameter("TaskNumber", typeof(short));
    
            var subject_SubjectNameParameter = subject_SubjectName != null ?
                new ObjectParameter("Subject_SubjectName", subject_SubjectName) :
                new ObjectParameter("Subject_SubjectName", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TasksUPDATEProc", idTaskNumberParameter, taskNumberParameter, subject_SubjectNameParameter, summaryParameter);
        }
    
        public virtual ObjectResult<TaskTwoProc1_Result> TaskTwoProc1(string subject)
        {
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskTwoProc1_Result>("TaskTwoProc1", subjectParameter);
        }
    
        public virtual ObjectResult<TaskOneProc_Result> TaskOneProc(string groupNum)
        {
            var groupNumParameter = groupNum != null ?
                new ObjectParameter("GroupNum", groupNum) :
                new ObjectParameter("GroupNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TaskOneProc_Result>("TaskOneProc", groupNumParameter);
        }
    }
}
